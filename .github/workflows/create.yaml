name: Deploy EKS, ArgoCD and Traefik

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_DEPLOYMENT_NAME: ${{ vars.AWS_DEPLOYMENT_NAME }}
  TERRAFORM_STATE_NAME: ${{ secrets.TERRAFORM_STATE_NAME }}
  TRAEFIK_TOKEN: ${{ secrets.TRAEFIK_TOKEN  }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    steps:
      - uses: actions/checkout@v3
      - uses: opentofu/setup-opentofu@v1

      - name: Create bucket in S3
        uses: aitorres/aws-s3-create-bucket@v1.2.0
        with:
          bucket-name: ${{secrets.AWS_DEPLOYMENT_NAME }}-terraform-state
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          acl: 'private'
        continue-on-error: true

      - name: Envsubst s3 bucket
        id: envsubst
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext moreutils
          
          if [[ $AWS_DEPLOYMENT_NAME == "" ]]; then
            echo "Please set AWS_DEPLOYMENT_NAME secret in the Github!"
            exit 127
          fi
          
          envsubst < versions.tf | sponge versions.tf
          envsubst < main.tf | sponge main.tf
        continue-on-error: false

      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: true

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color

      - name: OpenTofu Plan
        id: plan
        run: tofu plan -no-color
        continue-on-error: true

      - name: OpenTofu Apply VPC
        id: apply-vpc
        run: tofu apply -target="module.vpc" -auto-approve
        continue-on-error: false

      - name: OpenTofu Apply EKS
        id: apply-eks
        run: tofu apply -target="module.eks" -auto-approve
        continue-on-error: false

      - name: OpenTofu Apply
        id: apply
        run: tofu apply -auto-approve
        continue-on-error: false

      - name: Kubectl config
        id: kubectl
        run: |
          export KUBECONFIG="/tmp/traefik-gitops-kubernetes"
          aws eks --region $AWS_REGION update-kubeconfig --name $AWS_DEPLOYMENT_NAME
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          kubectl create ns traefik || echo "Already created"
          kubectl create ns apicurio-registry-operator-namespace  || echo "Already created"
          kubectl create secret generic ikenna-apicurio-user --from-literal=user=$POSTGRESS_USERNAME --from-literal=password=$POSTGRESS_PASSWORD -n apicurio-registry-operator-namespace  || echo "Already created"
          kubectl create secret generic ikenna-apicurio-superuser --from-literal=user=postgres --from-literal=token=$POSTGRESS_PASSWORD -n apicurio-registry-operator-namespace  || echo "Already created"
          kubectl apply -f bootstrap/addons.yaml
          kubectl apply -f bootstrap/workloads.yaml
          kubectl delete -f https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/releases/cnpg-1.24.0.yaml || echo "Cnpg not exists"
          kubectl apply --server-side -f https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/releases/cnpg-1.24.0.yaml
        continue-on-error: false